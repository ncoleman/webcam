#!/bin/ksh

# NJC 04/30/11 
# Script to retrieve webcam images, according to parameters associeated in the file of the list of URLs.

# file containing list of webcam urls, their descriptions and other info
URLLISTFILE="/home/nick/feh/newformat-webcam-urls"
IMAGEDIR=/home/nick/feh/images_webcam
# set up current hour 
HOUR=$(date "+%H")

# wget error code messages from the man page.
set -A WGETERRCODE   "No problems occurred." \
    "Generic error code."  \
    "Parse error, e.g. command-line option" \
    "File I/O error." \
    "Network failure." \
    "SSL verification failure." \
    "Username/password authentication failure." \
    "Protocol errors." \
    "Server issued an error response."


# Function to generate date-aware URLs.
# URLs are specifi and need to hard-coded
# input is IMAGE array, output is same array with url in [0] changed.
function makedate {
# rothera 
# awk 'BEGIN {FS="\""} ; /<img src=.*webcams/ { print $2 }' index.php | head -1
    DATE=$(date) 
    case ${IMAGE[0]} in 
	*instacam*)
	    ;;
	*)
	    return
	    ;;	
    esac
}

# Function to check whether update is ok for this run.
# updatetime is null or a string in format "0-24".
# If current hour is within the updatetime, do the update
# Returns 1 to indicate ok, 0 for not (intentionally the opposite of true false
# so that an empty value doesn't succeed.
function checkupdate {
    typeset start end

    start=${UPDATETIME%%-*}
    end=${UPDATETIME##*-}
    # Handle case where start -> end crosses midnight
    # e.g. 22 -> 5: with hour at 23 or 3 = success, hour at 20 or 6 = fail
    if [ $start -ge $end ] ; then
	if [ $start -le $HOUR -o $HOUR -le $end ] ; then
	    return 1
	else
	    echo "$URL not retrieved: start $start, hour $HOUR, end $end" > /dev/stderr
	    return 0
	fi
    else
	if [ $start -le $HOUR -a $HOUR -le $end ] ; then
	    return 1
	else
	    echo "$URL not retrieved: start $start, hour $HOUR, end $end" > /dev/stderr
	    return 0
	fi
    fi
}
    


cd $IMAGEDIR || { echo "Image directory not found" ; exit 1 ; }
rm -f *


# Format:
# URL,comment,date in URL (to be calculated) [1,0],time (hour)  to retrieve,output image name,
# If date in URL, hand off to function that has awareness of specific URLs
#URL='http://sohowww.nascom.nasa.gov/data/realtime/eit_304/1024/latest.jpg| # SOHO EIT 304 latest|'
#http://wwc.instacam.com/instacamimg4/klast/04242011/042420110330_l.jpg|1|*|lasvegas1.jpg

WGETERRORS=""
TICK=$(date "+%s")
# 'while' syntax below from: http://www.cyberciti.biz/faq/ksh-read-file/
while IFS=\| read URL COMMENT DATE UPDATETIME NAME
    do
	# ignore comment lines (indicated by leading '# ' after stripping off rest of string)
	if [ ${URL%% *} != '#' ] ; then
	    # and don't bother if this is outside the update time.
	    checkupdate
	    if [ $? -eq 1  ] ; then
		#echo url "$URL", updatetime "$UPDATETIME", name "$NAME",
		wget --tries=3 --inet4-only "$URL" -O "$NAME"
		returncode=$?
		if [ $returncode -ne 0 ] ; then
		    WGETERRORS=$WGETERRORS"\nWget failed with $URL, error code is $returncode ${WGETERRCODE[$returncode]}"
		fi
		# create caption file for feh
		echo "$COMMENT" > "$NAME".txt
	    fi
	fi  
    done  < "$URLLISTFILE"
TOCK=$(date "+%s")

# create a list of images, without the accompanying caption files
/bin/ls -1 !(*.txt) > images

echo "Completed webcam image fetch in $(($TOCK - $TICK)) seconds."
echo "Errors were: $WGETERRORS"

#feh -Z -F -f images --caption-path . -D 30

# vim: set filetype=sh
